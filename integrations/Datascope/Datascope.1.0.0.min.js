var Datascope={Datascope:"Datascope",Version:"1.0.0",Errors:{},Configuration:{},XHR:{},JSON:{},Presets:{}},ds=Datascope,Ds=Datascope,DS=Datascope,dS=Datascope;Datascope.Errs=Datascope.Errors,Datascope.Config=Datascope.Configuration,Datascope.Cogs=Datascope.Configuration,Datascope.XML=Datascope.XHR,Datascope.XHTTP=Datascope.XHR,Datascope.Pre=Datascope.Presets,Datascope.Datascope="Buildblend Datascope.js!",Datascope.Version="0.8.0",Datascope.Errors={Unknown:{Time:new Date(-1),Type:"Unknown",Name:"Unknown Error",Message:"The error could not be determined.",Code:0},NoError:{Time:new Date(-1),Type:"ErrorController",Name:"No Error",Message:"Honestly, the error which occured is that no error occured.",Code:1},Disabled:{Time:new Date(-1),Type:"ConfigurationError",Name:"Datascope Disabled",Message:"Datascope is disabled on this site.",Code:2},InvalidNumber:{Time:new Date(-1),Type:"DatatypeError",Name:"Invalid Number",Message:"An invalid number was provided.",Code:3},InvalidParameters:{Time:new Date(-1),Type:"ParameterError",Name:"Invalid Parameters",Message:"One or more parameters were either invalid or omitted.",Code:4},MissingParameters:{Time:new Date(-1),Type:"ParameterError",Name:"Missing Parameters",Message:"One or more parameters were missing: meaning they were either undefined or empty.",Code:5},InvalidCategory:{Time:new Date(-1),Type:"CategoryError",Name:"Invalid Category",Message:"An invalid category was provided.",Code:6}},Datascope.Configuration.Enabled=!0,Datascope.Configuration.CollapsedErrorGroups=!1,Datascope.Authenticate=function(){return 0==Datascope.Configuration.Enabled||"?DatascopeActivation=false"==window.location.search?1:0},Datascope.Errors.Count=0,Datascope.Errors.LastError=Datascope.Errors.NoError,Datascope.Errors.Send=function(e,a){var s=`${Datascope.Datascope} ${Datascope.Version} encountered an error.`,o="color: #D63227; font-family: monospace; font-size: 24px;",r="font-family: monospace; font-size: 16px;",t=new Date;return Datascope.Configuration.CollapsedErrorGroups?console.groupCollapsed(`%c${s}`,`${o}`):console.group(`%c${s}`,`${o}`),console.log(`%cTime: ${t}`,`${r} color: #D63227;`),console.log(`%cType: ${e.Type}`,`${r} color: #E04136;`),console.log(`%cName: ${e.Name}`,`${r} color: #E85b51;`),console.log(`%cMessage: ${e.Message}`,`${r} color: #EB6960;`),console.log(`%cCode: ${e.Code}`,`${r} color: #F07D75;`),null!=a&&console.log(`%cAdditional Details: ${a}`,`${r} color: #F07D75;`),console.groupEnd(),e.Time=t,Datascope.Errors.LastError.Time=t,Datascope.Errors.LastError.Type=e.Type,Datascope.Errors.LastError.Name=e.Name,Datascope.Errors.LastError.Message=e.Message,Datascope.Errors.LastError.Code=e.Code,Datascope.Errors.Count++,e},Datascope.XHR.Get=function(e,a,s){var o=new XMLHttpRequest,r=void 0;return o.onreadystatechange=function(){4==this.readyState&&200==this.status&&(r=a())},o.open("GET",e,s||!0),o.send(),{Return:r,ResponseText:o.responseText,ResponseXML:o.responseXML,Status:o.status,StatusText:o.statusText,File:e,Asynchronous:s||!0,Async:s||!0,Type:"GET"}},Datascope.XHR.GET=Datascope.XHR.Get,Datascope.XHR.Post=function(e,a,s,o,r){var t=new XMLHttpRequest,n=void 0;return t.onreadystatechange=function(){4==this.readyState&&200==this.status&&(n=o())},t.open("POST",e,r||!0),null==s&&t.setRequestHeader(s.Header,s.Content),t.send(a),{Return:n,ResponseText:t.responseText,ResponseXML:t.responseXML,Status:t.status,StatusText:t.statusText,File:e,Asynchronous:r||!0,Async:r||!0,Type:"POST"}},Datascope.JSON.Get=function(e,a){const s=new XMLHttpRequest;return s.onload=function(){a()},s.open("GET",e),s.send(),{Return:returnVal,ResponseText:s.responseText,ResponseXML:s.responseXML,Status:s.status,StatusText:s.statusText,File:e,Type:"POST"}},Datascope.Presets.Read=function(e,a){var s;return 1==e.match(/(Animals)/gim)?(s=Datascope.Presets.Categories.Animals,null!=a?s[s.indexOf(a)]:s):1==e.match(/(Cars)/gim)?(s=Datascope.Presets.Categories.Cars,null!=a?s[s.indexOf(a)]:s):1==e.match(/(Vehicles)/gim)?(s=Datascope.Presets.Categories.Vehicles,null!=a?s[s.indexOf(a)]:s):Construct.Errors.Send(Construct.Errors.InvalidCategory)},Datascope.Presets.Write=function(e,a){return 1==/Animals/gim.test(e)?(Datascope.Presets.Categories.Animals.push(a),a):1==/Cars/gim.test(e)?(Datascope.Presets.Categories.Cars.push(a),a):1==/Vehicles/gim.test(e)?(Datascope.Presets.Categories.Vehicles.push(a),a):Datascope.Errors.Send(Datascope.Errors.InvalidCategory)},Datascope.Presets.Categories={Animals:[{Name:"Cat",Plural:"Cats",Infant:"Kitten",Plural_Infant:"Kittens"},{Name:"Dog",Plural:"Dogs",Infant:"Puppy",Plural_Infant:"Puppies"},{Name:"Lion",Plural:"Lions",Infant:"Cub",Plural_Infant:"Cubs"},{Name:"Tiger",Plural:"Tigers",Infant:"Cub",Plural_Infant:"Cubs"}],Cars:[{Name:"Audi"},{Name:"BMW"},{Name:"Ferrari"},{Name:"Ford"},{Name:"Honda"},{Name:"Hyundai"},{Name:"Jaguar"},{Name:"Kia"},{Name:"Lamborghini"},{Name:"Mahindra"},{Name:"Maruti Suzuki"},{Name:"Mercedes"},{Name:"Mercedes-Benz"},{Name:"Nissan"},{Name:"Polaris"},{Name:"Renault"},{Name:"Tata"},{Name:"Tesla"},{Name:"Toyota"},{Name:"Volkswagen"},{Name:"Volvo"}],Vehicles:[{Name:"Airplane",Plural:"Airplanes",Name_UK:"Aeroplane",Plural_UK:"Aeroplane"},{Name:"Car",Plural:"Cars"},{Name:"Motorcycle",Plural:"Motorcycles",Name_UK:"Motorbike",Plural_UK:"Motorbikes"},{Name:"Seaboat",Plural:"Seaboats"},{Name:"Ship",Plural:"Ships"},{Name:"Train",Plural:"Trains"},{Name:"Truck",Plural:"Trucks"}]};